<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://haraaaaaa.github.io/</id><title>Hara's Records</title><subtitle>Software Engineer at Porters having 2 years 7 months work experience currently living in Japan.</subtitle> <updated>2022-04-04T21:04:23+09:00</updated> <author> <name>Hara Oh</name> <uri>https://haraaaaaa.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://haraaaaaa.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko-KR" href="https://haraaaaaa.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 Hara Oh </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>AWS 스토리지 서비스</title><link href="https://haraaaaaa.github.io/posts/aws-storage/" rel="alternate" type="text/html" title="AWS 스토리지 서비스" /><published>2022-03-31T18:28:00+09:00</published> <updated>2022-04-02T02:34:57+09:00</updated> <id>https://haraaaaaa.github.io/posts/aws-storage/</id> <content src="https://haraaaaaa.github.io/posts/aws-storage/" /> <author> <name>Hara Oh</name> </author> <category term="AWS" /> <category term="스토리지" /> <summary> 객체 파일 및 블록 스토리지 Amazon Simple Storage Service(S3) 확장성, 가용성 및 보안을 갖춘 객체 스토리지로, 모든 위치에서 원하는 양의 데이터를 저장하고 검색할 수 있습니다. Amazon Elastic File System(EFS) 스토리지 관리 없이 파일 데이터를 공유할 수 있는 서버리스 방식의 파일 시스템으로, 단순하고 탄력적이며 한 번만 설정하면 됩니다. Amazon FSx 주요 상용 및 오픈 소스 파일 시스템의 기능과 성능을 제공하는 완전관리형의 비용 효율적인 파일 스토리지입니다. Amazon Elastic Block Store(EBS) 처리량 및 트랜잭션 집약적인 워크로드를 모든 규모에서 지원할 수 있는 사용하기 쉬운 고성능 블록 스토리지 서비스입니다. ... </summary> </entry> <entry><title>AWS Snowball</title><link href="https://haraaaaaa.github.io/posts/aws-snowball/" rel="alternate" type="text/html" title="AWS Snowball" /><published>2022-03-31T18:28:00+09:00</published> <updated>2022-04-02T02:01:37+09:00</updated> <id>https://haraaaaaa.github.io/posts/aws-snowball/</id> <content src="https://haraaaaaa.github.io/posts/aws-snowball/" /> <author> <name>Hara Oh</name> </author> <category term="AWS" /> <category term="마이그레이션 및 전송" /> <summary> Snowball이란? 페타바이트*급 대용량 데이터를 전송하기 위한 서비스로 최대 80TB까지 저장 가능하며, Snowball이외에 기능이 추가된 Snowball Edge가 있습니다. ※ 페타바이트란? 테라바이트의 다음 단위, 1024 테라바이트는 1페타바이트 서비스의 흐름 위의 사진과 같은 Snowball을 AWS에서 배송 받음 Snowball에 온프레미스에 있던 데이터를 이동함 Snowball을 다시 AWS로 배송 AWS에서 S3 bucket에 Snowball에 있던 자료를 이동 사용 예시 페타바이트 규모의 데이터를 AWS로 이송하는 경우 VPN, Direct Connect, S3를 통한 전송을 이용하기엔 데이터의 양이 많을 경우 물리적으로 격리된 환경... </summary> </entry> <entry><title>AWS Site-to-Site VPN</title><link href="https://haraaaaaa.github.io/posts/aws-site-to-site-vpn/" rel="alternate" type="text/html" title="AWS Site-to-Site VPN" /><published>2022-03-31T18:28:00+09:00</published> <updated>2022-04-02T02:57:21+09:00</updated> <id>https://haraaaaaa.github.io/posts/aws-site-to-site-vpn/</id> <content src="https://haraaaaaa.github.io/posts/aws-site-to-site-vpn/" /> <author> <name>Hara Oh</name> </author> <category term="AWS" /> <category term="네트워킹 및 콘텐츠 전송" /> <summary> AWS Site-to-Site VPN이란? 일반적으로 Virtual Private Network의 약자로 가설사설망을 뜻하지만, AWS Site-to-Site VPN에서의 VPN 연결은 VPC와 자체 온프레미스 네트워크 간의 연결을 의미함 AWS Site-to-Site VPN은 네트워크와 VPC 또는 Transit Gateway 사이에 암호화된 2개의 터널을 생성하여 사용 인터넷 프로토콜 보안(IPsec) VPN 연결을 지원 최대 1.25Gbps의 처리량을 지원 사용 예시 하이브리드 네트워크 구축 AWS와 온프레미스 네트워크를 연결하여 성능의 저하 없이 여러 환경에 걸친 애플리케이션을 구축할 수 있습니다. 요금 Site-to-Site VPN 연결당 0.05 USD(시간당) AWS Dir... </summary> </entry> <entry><title>AWS S3 종류</title><link href="https://haraaaaaa.github.io/posts/aws-s3-type/" rel="alternate" type="text/html" title="AWS S3 종류" /><published>2022-03-31T18:28:00+09:00</published> <updated>2022-04-02T02:33:50+09:00</updated> <id>https://haraaaaaa.github.io/posts/aws-s3-type/</id> <content src="https://haraaaaaa.github.io/posts/aws-s3-type/" /> <author> <name>Hara Oh</name> </author> <category term="AWS" /> <category term="스토리지" /> <summary> 알 수 없거나 변화하는 액세스의 스토리지 Amazon S3 Intelligent-Tiering(S3 Intelligent-Tiering) 액세스 빈도에 따라 가장 비용 효율적인 액세스 티어로 데이터를 자동으로 이동하여 세분화 운영 오버헤드 없음 수명 주기 요금 없음 검색 요금 없음 최소 스토리지 기간이 없음 액세스 패턴을 모니터링 액세스 패턴을 모니터링하여 n일 연속으로 액세스하지 않은 객체를 다음과 같은 티어로 이동 티어 일자 Infrequent Access 30일 연속 Archive Instant Access 90일 연속 ... </summary> </entry> <entry><title>AWS FSx</title><link href="https://haraaaaaa.github.io/posts/aws-fsx/" rel="alternate" type="text/html" title="AWS FSx" /><published>2022-03-31T18:28:00+09:00</published> <updated>2022-04-02T02:01:37+09:00</updated> <id>https://haraaaaaa.github.io/posts/aws-fsx/</id> <content src="https://haraaaaaa.github.io/posts/aws-fsx/" /> <author> <name>Hara Oh</name> </author> <category term="AWS" /> <category term="스토리지" /> <summary> Amazon FSx란? 클라우드에서 사용하는 기능이 풍부한 고성능 파일 시스템 구분 기준 (다양한 구분 기준이 있기 때문에 사이트 참고) 성능 및 크기 조정 접근성 및 통합 하이브리드 사용량 가격 대비 성능 최적화 가용성 및 데이터 보호 보안 및 규정 준수 4가지의 고성능 파일 시스템이 존재 FSx for NetApp ONTAP FSx for OpenZFS FSx for Windows File Server FSx for Lustre AWS로 이동할 때 일반적으로 고려해야 할 사항 현재 스토리지 기술과 가장 일치하는 파일 시스템을 선택 하는 것 (애플리케이션 호환성, 데이터 관리 방법 유지) </summary> </entry> </feed>
